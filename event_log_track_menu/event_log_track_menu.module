<?php

/**
 * @file
 * Logs menu CUD commands in the event_log_track module.
 */

/**
 * Implements hook_event_log_track_handlers().
 * 
 * @return array
 *   An associative array, keyed by event type, and valued by handler info:
 *   - {string} title
 *     The title that describes the events logged by this handler.
 *     This handler's 'form_submit_callback' callback will be notified when a
 *     form is submitted that has an id as specified in this array. Optional.
 *   - {array} form_ids_regexp
 *     The same as form_ids, but instead of identical matches regular
 *     expressions can be specified.
 *   - {string} form_submit_callback
 *     Callback that's called when a form is submitted with a form id as
 *     specified in form_ids. The callback function profile:
 */
function event_log_track_menu_event_log_track_handlers() {
  $handlers = array();

  $handlers['menu'] = array(
      'title' => t('Menu'),
      'form_ids' => array(
          'menu_link_content_menu_link_content_form',
          'menu_link_content_menu_link_content_delete_form',
      ),
      'form_submit_callback' => 'event_log_track_menu_form_submit',
  );
  return $handlers;
}

/**
 * Event log callback for the user authentication event log.
 * 
 * @param $form
 * @param $form_state
 * 
 * @return array
 */
function event_log_track_menu_form_submit(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  $log = NULL;

  switch ($form_id) {
    case 'menu_link_content_menu_link_content_form':
      $menu = $form_state->getValues();
      $get_title = $menu['title'][0]['value'];
      $get_path = $menu['link'][0]['uri'];
      $get_menu_parent = substr($menu['menu_parent'], 0, -1);
      $route_parameters = \Drupal::routeMatch()->getParameter('menu_link_content');

      if (empty($route_parameters)) {
        // Insert Menu Link.
        $log = array(
            'operation' => 'link insert',
            'description' => t('%title, %path', array(
                '%title' => $get_title,
                '%path' => $get_path,
            )),
            'ref_char' => $get_menu_parent,
        );
      }
      else {
        // Update Menu Link.
        $log = array(
            'operation' => 'link update',
            'description' => t('%title (%id), %path', array(
                '%title' => $get_title,
                '%id' => $route_parameters->get('id')->value,
                '%path' => $get_path,
            )),
            'ref_numeric' => $route_parameters->get('id')->value,
            'ref_char' => $route_parameters->getMenuName(),
        );
      }
      
      break;
    case 'menu_link_content_menu_link_content_delete_form':
      // Delete Menu Link.
      $route_parameters = \Drupal::routeMatch()->getParameter('menu_link_content');
      $uri = $route_parameters->get('link')->uri;
      $log = array(
          'operation' => 'link delete',
          'description' => t('%title (%id), %path', array(
              '%title' => $route_parameters->getTitle(),
              '%id' => $route_parameters->get('id')->value,
              '%path' => $uri,
          )),
          'ref_numeric' => $route_parameters->get('id')->value,
          'ref_char' => $route_parameters->getMenuName(),
      );
      
      break;
  }
  return $log;
}

/**
 * Implements hook_menu_insert().
 */
function event_log_track_menu_menu_insert($menu) {
  $log = array(
      'type' => 'menu',
      'operation' => 'insert',
      'description' => t('%title (%name)', array(
          '%title' => $menu->get('label'),
          '%name' => $menu->get('id'),
      )),
      'ref_char' => $menu->get('id'),
  );
  event_log_track_insert($log);
}

/**
 * Implements hook_menu_update().
 */
function event_log_track_menu_menu_update($menu) {
  $log = array(
      'type' => 'menu',
      'operation' => 'update',
      'description' => t('%title (%name)', array(
          '%title' => $menu->get('label'),
          '%name' => $menu->get('id'),
      )),
      'ref_char' => $menu->get('id'),
  );
  event_log_track_insert($log);
}

/**
 * Implements hook_menu_delete().
 */
function event_log_track_menu_menu_delete($menu) {
  $log = array(
      'type' => 'menu',
      'operation' => 'delete',
      'description' => t('%title (%name)', array(
          '%title' => $menu->get('label'),
          '%name' => $menu->get('id'),
      )),
      'ref_char' => $menu->get('id'),
  );
  event_log_track_insert($log);
}
